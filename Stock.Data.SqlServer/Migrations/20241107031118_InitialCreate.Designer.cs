// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stock.Data.SqlServer.Context;

#nullable disable

namespace Stock.Data.SqlServer.Migrations
{
    [DbContext(typeof(StockContext))]
    [Migration("20241107031118_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Stock.Domain.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Key")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("Stock.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EAN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Key")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("SizeId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Stock.Domain.Entities.Size", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Size");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "TAM_RN"
                        },
                        new
                        {
                            Id = 2,
                            Description = "TAM_1"
                        },
                        new
                        {
                            Id = 3,
                            Description = "TAM_2"
                        },
                        new
                        {
                            Id = 4,
                            Description = "TAM_3"
                        },
                        new
                        {
                            Id = 5,
                            Description = "TAM_4"
                        },
                        new
                        {
                            Id = 6,
                            Description = "TAM_5"
                        },
                        new
                        {
                            Id = 7,
                            Description = "TAM_6"
                        },
                        new
                        {
                            Id = 8,
                            Description = "TAM_7"
                        },
                        new
                        {
                            Id = 9,
                            Description = "TAM_8"
                        },
                        new
                        {
                            Id = 10,
                            Description = "TAM_9"
                        },
                        new
                        {
                            Id = 11,
                            Description = "TAM_10"
                        },
                        new
                        {
                            Id = 12,
                            Description = "TAM_11"
                        },
                        new
                        {
                            Id = 13,
                            Description = "TAM_12"
                        },
                        new
                        {
                            Id = 14,
                            Description = "TAM_13"
                        },
                        new
                        {
                            Id = 15,
                            Description = "TAM_14"
                        },
                        new
                        {
                            Id = 16,
                            Description = "TAM_PP"
                        },
                        new
                        {
                            Id = 17,
                            Description = "TAM_P"
                        },
                        new
                        {
                            Id = 18,
                            Description = "TAM_M"
                        },
                        new
                        {
                            Id = 19,
                            Description = "TAM_G"
                        },
                        new
                        {
                            Id = 20,
                            Description = "TAM_GG"
                        },
                        new
                        {
                            Id = 21,
                            Description = "TAM_XG"
                        },
                        new
                        {
                            Id = 22,
                            Description = "TAM_XXG"
                        },
                        new
                        {
                            Id = 23,
                            Description = "TAM_EG"
                        });
                });

            modelBuilder.Entity("Stock.Domain.Entities.Product", b =>
                {
                    b.HasOne("Stock.Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stock.Domain.Entities.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Size");
                });
#pragma warning restore 612, 618
        }
    }
}
